{
  "_args": [
    [
      "react-native-keyboard-aware-scroll-view@git+https://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
      "/home/rj/react-native/graph/node_modules/native-base"
    ]
  ],
  "_from": "git+https://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
  "_id": "react-native-keyboard-aware-scroll-view@0.2.9",
  "_inCache": true,
  "_installable": true,
  "_location": "/native-base/react-native-keyboard-aware-scroll-view",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/GeekyAnts/react-native-keyboard-aware-scroll-view/master/package.json",
      "gitUrl": "git://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
      "httpsUrl": "git+https://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
      "shortcut": "github:GeekyAnts/react-native-keyboard-aware-scroll-view",
      "ssh": "git@github.com:GeekyAnts/react-native-keyboard-aware-scroll-view.git",
      "sshUrl": "git+ssh://git@github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
      "type": "github"
    },
    "name": "react-native-keyboard-aware-scroll-view",
    "raw": "react-native-keyboard-aware-scroll-view@git+https://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
    "rawSpec": "git+https://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
    "scope": null,
    "spec": "git+https://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "/native-base"
  ],
  "_resolved": "git+https://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git#f4805f254d6cc8e3329f5fb224944401f66655db",
  "_shasum": "9d1ade4d8163bb2ea4315ffaf4acd809d50ae8e5",
  "_shrinkwrap": null,
  "_spec": "react-native-keyboard-aware-scroll-view@git+https://github.com/GeekyAnts/react-native-keyboard-aware-scroll-view.git",
  "_where": "/home/rj/react-native/graph/node_modules/native-base",
  "author": {
    "email": "me@alvaromb.com",
    "name": "Alvaro Medina Ballester"
  },
  "bugs": {
    "url": "https://github.com/APSL/react-native-keyboard-aware-scroll-view/issues"
  },
  "dependencies": {
    "create-react-class": "^15.6.0",
    "prop-types": "^15.5.10",
    "react-timer-mixin": "^0.13.3"
  },
  "description": "A React Native ScrollView component that resizes when the keyboard appears.",
  "devDependencies": {
    "babel-eslint": "^6.0.4",
    "eslint": "^3.17.1",
    "eslint-plugin-flowtype": "^2.35.0",
    "eslint-plugin-react": "^7.1.0",
    "flow-bin": "0.47.0"
  },
  "gitHead": "f4805f254d6cc8e3329f5fb224944401f66655db",
  "homepage": "https://github.com/APSL/react-native-keyboard-aware-scroll-view#readme",
  "keywords": [
    "react",
    "react-native",
    "scrollview",
    "keyboard",
    "ios",
    "android",
    "react-component"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "react-native-keyboard-aware-scroll-view",
  "optionalDependencies": {},
  "readme": "# react-native-keyboard-aware-scroll-view\n\n<p>\n<img src=\"https://travis-ci.org/APSL/react-native-keyboard-aware-scroll-view.svg?branch=master\" />\n<img src=\"https://img.shields.io/npm/dm/react-native-keyboard-aware-scroll-view.svg\" />\n<img src=\"https://img.shields.io/npm/dt/react-native-keyboard-aware-scroll-view.svg\" />\n</p>\n\nA ScrollView component that handles keyboard appearance and automatically scrolls to focused `TextInput`.\n\n<p align=\"center\">\n<img src=\"https://raw.githubusercontent.com/wiki/APSL/react-native-keyboard-aware-scroll-view/kasv.gif\" alt=\"Scroll demo\" width=\"400\">\n</p>\n\n## Supported versions\n- `v0.2.0` requires `RN>=0.32.0`.\n- `v0.1.2` requires `RN>=0.27.2` but you should use `0.2.0` in order to make it work with multiple scroll views.\n- `v0.0.7` requires `react-native>=0.25.0`.\n- Use `v0.0.6` for older RN versions.\n\n## Installation\nInstallation can be done through ``npm``:\n\n```shell\nnpm i react-native-keyboard-aware-scroll-view --save\n```\n\n## Usage\nYou can use the ``KeyboardAwareScrollView`` or the ``KeyboardAwareListView``\ncomponents. Both accept ``ScrollView`` and ``ListView`` default props and\nimplements a custom ``KeyboardAwareMixin`` to handle keyboard appearance.\nThe mixin is also available if you want to use it in any other component.\n\nImport ``react-native-keyboard-aware-scroll-view`` and wrap your content inside\nit:\n\n```js\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\n```\n\n```jsx\n<KeyboardAwareScrollView>\n  <View>\n    <TextInput />\n  </View>\n</KeyboardAwareScrollView>\n```\n\n## Auto-scroll in `TextInput` fields\nAs of `v0.1.0`, the component auto scrolls to the focused `TextInput` ðŸ˜Ž. For versions `v0.0.7` and older you can do the following.\n\n### Programatically scroll to any `TextInput`\nIn order to scroll to any `TextInput` field, you can use the built-in method `scrollToFocusedInput`. Example:\n\n```js\n_scrollToInput (reactNode: any) {\n  // Add a 'scroll' ref to your ScrollView\n  this.refs.scroll.scrollToFocusedInput(reactNode)\n}\n```\n\n```jsx\n<KeyboardAwareScrollView ref='scroll'>\n  <View>\n    <TextInput onFocus={(event: Event) => {\n      // `bind` the function if you're using ES6 classes\n      this._scrollToInput(ReactNative.findNodeHandle(event.target))\n    }/>\n  </View>\n</KeyboardAwareScrollView>\n```\n\n### Programatically scroll to any position\nThere's another built-in function that lets you programatically scroll to any position of the scroll view:\n\n```js\nthis.refs.scroll.scrollToPosition(0, 0, true)\n```\n\n## Register to keyboard events\nYou can register to `ScrollViewResponder` events `onKeyboardWillShow` and `onKeyboardWillHide`:\n\n```js\n<KeyboardAwareScrollView\n  onKeyboardWillShow={(frames: Object) => {\n    console.log('Keyboard event', frames)\n  }}>\n  <View>\n    <TextInput />\n  </View>\n</KeyboardAwareScrollView>\n```\n\n## API\n### Props\nAll the `ScrollView`/`ListView` props will be passed.\n\n| **Prop** | **Type** | **Description** |\n|----------|----------|-----------------|\n| `viewIsInsideTabBar` | `boolean` | Adds an extra offset that represents the `TabBarIOS` height. |\n| `resetScrollToCoords` | `Object: {x: number, y: number}` | Coordinates that will be used to reset the scroll when the keyboard hides. |\n| `enableAutoAutomaticScroll` | `boolean` | When focus in `TextInput` will scroll the position, default is enabled. |\n| `extraHeight` | `number` | Adds an extra offset when focusing the `TextInput`s. |\n| `extraScrollHeight` | `number` | Adds an extra offset to the keyboard. Useful if you want to stick elements above the keyboard. |\n| `enableResetScrollToCoords` | `boolean` | Lets the user enable or disable automatic resetScrollToCoords. |\n| `keyboardOpeningTime` | `number` | Sets the delay time before scrolling to new position, default is 250 |\n\n| **Method** | **Parameter** | **Description** |\n|------------|---------------|-----------------|\n| `getScrollResponder` | `void` | Get `ScrollResponder` |\n| `scrollToPosition` | `x: number, y: number, animated: bool = true` | Scroll to specific position with or without animation. |\n| `scrollToEnd` | `animated?: bool = true` | Scroll to end with or without animation. |\n\n## License\n\nMIT.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/APSL/react-native-keyboard-aware-scroll-view.git"
  },
  "scripts": {
    "flow": "flow check",
    "lint": "eslint lib",
    "test": "npm run lint"
  },
  "tags": [
    "react",
    "react-native",
    "react-component",
    "ios",
    "android"
  ],
  "types": "index.d.ts",
  "version": "0.2.9"
}
